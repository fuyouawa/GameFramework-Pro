
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace GameProto.Runtime.Config.actor
{
public abstract partial class Actor : GameFramework.DataTable.IDataRow
{
    /// <summary>
    /// Id
    /// </summary>
public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
public string Name { get; private set; }
    /// <summary>
    /// 走路速度（m/s）
    /// </summary>
public float WalkSpeed { get; private set; }


int GameFramework.DataTable.IDataRow.Id => Id;

    public virtual bool ParseDataRow(string dataRowString, object userData)
    {
    
        var __node = userData as JSONNode;
        { if(!__node["id"].IsNumber) { throw new SerializationException(); }  Id = __node["id"]; }
        { if(!__node["name"].IsString) { throw new SerializationException(); }  Name = __node["name"]; }
        { if(!__node["walk_speed"].IsNumber) { throw new SerializationException(); }  WalkSpeed = __node["walk_speed"]; }
        return true;
    }

    public bool ParseDataRow(byte[] dataRowBytes, int startIndex, int length, object userData)
    {
        return ParseDataRow(System.Text.Encoding.UTF8.GetString(dataRowBytes, startIndex, length), userData);
    }


    public static Actor DeserializeActor(JSONNode _buf)
    {
        switch ((string)_buf["$type"])
        {
            case "Player": return DeserializeImpl<actor.Player>();
            default: throw new SerializationException();
        }

        T DeserializeImpl<T>() where T : GameFramework.DataTable.IDataRow, new()
        {
            var inst = new T();
            if (!inst.ParseDataRow(null, _buf)) throw new SerializationException();
            return inst;
        }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "walkSpeed:" + WalkSpeed + ","
        + "}";
    }
}
}

